# Run this Action on creating a new tag matching "<library>-<version>-<build>"
# e.g., foobar-1.2.3-1
name: Release build
on:
  push:
    tags:
    - '*-*-*'

jobs:
  build:
    runs-on: macOS-latest
    strategy:
      matrix:
        target: ['iOS', 'tvOS', 'watchOS']
    steps:
    - uses: actions/checkout@v2
    - name: Set build variables
      id: build-vars
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        echo "TAG=${TAG}"
        export PACKAGE_NAME_VERSION="${TAG%-*}"
        export PACKAGE_NAME="${PACKAGE_NAME_VERSION%-*}"
        export PACKAGE_VERSION="${PACKAGE_NAME_VERSION#*-}"
        export BUILD_NUMBER="${TAG#*-*-}"

        echo "PACKAGE_NAME=${PACKAGE_NAME}"
        echo "PACKAGE_VERSION=${PACKAGE_VERSION}"
        echo "BUILD_NUMBER=${BUILD_NUMBER}"

        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> ${GITHUB_OUTPUT}
        echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> ${GITHUB_OUTPUT}
        echo "BUILD_NUMBER=${BUILD_NUMBER}" >> ${GITHUB_OUTPUT}
    - name: Set up Python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: "3.X"
    - name: Build ${{ matrix.target }}
      env:
        BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
      run: |
        # 2020-06-24: The Homebrew copy of gettext leaks into the macOS build
        # if it is present. Uninstall gettext to make sure that doesn't happen.
        # 2021-01-02: Uninstall curl as well. We need curl to download the
        # source bundles, but Homebrew's curl has a runtime dependency on
        # gettext. However macOS provides a version of curl that works fine.
        brew uninstall --ignore-dependencies gettext curl

        # Do the build for the requested target.
        make ${{ env.PACKAGE_NAME }}-${{ matrix.target }} $(echo "${{ env.PACKAGE_NAME }}" | tr 'a-z' 'A-Z')_VERSION=$${{ env.PACKAGE_VERSION }} BUILD_NUMBER=${{ env.BUILD_NUMBER }}

    - name: Upload build artefact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: dist
        path: "dist"
        if-no-files-found: error

  make-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set build variables
      id: build-vars
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        echo "TAG=${TAG}"

        export PACKAGE_NAME_VERSION="${TAG%-*}"

        export PACKAGE_NAME="${PACKAGE_NAME_VERSION%-*}"
        echo "PACKAGE_NAME=${PACKAGE_NAME}"

        export PACKAGE_VERSION="${PACKAGE_NAME_VERSION#*-}"
        echo "PACKAGE_VERSION=${PACKAGE_VERSION}"

        export BUILD_NUMBER="${TAG#*-*-}"
        echo "BUILD_NUMBER=${BUILD_NUMBER}"

        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> ${GITHUB_OUTPUT}
        echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> ${GITHUB_OUTPUT}
        echo "BUILD_NUMBER=${BUILD_NUMBER}" >> ${GITHUB_OUTPUT}

    - name: Get build artefacts
      uses: actions/download-artifact@v3.0.2
      with:
        name: dist
        path: dist

    - name: Create Release
      uses: ncipollo/release-action@v1.13.0
      with:
        name: ${{ env.PACKAGE_NAME }} v${{ env.PACKAGE_VERSION }} (build ${{ env.BUILD_NUMBER }})
        draft: true
        body: |
          Build ${{ env.BUILD_NUMBER }} of ${{ env.PACKAGE_NAME }} v${{ env.PACKAGE_VERSION }}.
        artifacts: "dist/*"
