diff -ru libffi-3.4.6-orig/generate-darwin-source-and-headers.py libffi-3.4.6/generate-darwin-source-and-headers.py
--- libffi-3.4.6-orig/generate-darwin-source-and-headers.py	2023-10-21 13:41:22
+++ libffi-3.4.6/generate-darwin-source-and-headers.py	2025-01-02 08:50:53
@@ -8,7 +8,7 @@
 
 
 class Platform(object):
-    pass
+    abi = None
 
 
 class i386_platform(Platform):
@@ -153,7 +153,22 @@
     arch = 'arm64_32'
     version_min = '-mwatchos-version-min=4.0'
 
+class macosx_x86_64_platform(x86_64_platform):
+    target = 'x86_64-apple-ios'
+    directory = 'darwin_ios'
+    sdk = 'macosx'
+    version_min = '-mios-version-min=14.2'
+    abi = 'macabi'
 
+
+class macosx_arm64_platform(arm64_platform):
+    target = 'arm64-apple-ios'
+    directory = 'darwin_ios'
+    sdk = 'macosx'
+    version_min = '-mios-version-min=14.2'
+    abi = 'macabi'
+
+
 def mkdir_p(path):
     try:
         os.makedirs(path)
@@ -219,7 +234,7 @@
                 "../configure",
                 f"--host={platform.target}",
             ] + (
-                [] if platform.sdk == "macosx" else [f"--build={os.uname().machine}-apple-darwin"]
+                [] if platform.sdk == "macosx" and platform.abi != "macabi" else [f"--build={os.uname().machine}-apple-darwin"]
             ),
             env=env
         )
@@ -243,16 +258,24 @@
     generate_ios=True,
     generate_tvos=True,
     generate_watchos=True,
+    enable_maccatalyst=True,
+    enable_i386=True,
+    enable_armv7=True,
 ):
     copy_files('src', 'darwin_common/src', pattern='*.c')
     copy_files('include', 'darwin_common/include', pattern='*.h')
 
     if generate_ios:
-        copy_src_platform_files(ios_simulator_i386_platform)
+        if enable_i386:
+            copy_src_platform_files(ios_simulator_i386_platform)
         copy_src_platform_files(ios_simulator_x86_64_platform)
         copy_src_platform_files(ios_simulator_arm64_platform)
-        copy_src_platform_files(ios_device_armv7_platform)
+        if enable_armv7:
+            copy_src_platform_files(ios_device_armv7_platform)
         copy_src_platform_files(ios_device_arm64_platform)
+        if enable_maccatalyst:
+            copy_src_platform_files(macosx_x86_64_platform)
+            copy_src_platform_files(macosx_arm64_platform)
     if generate_osx:
         copy_src_platform_files(desktop_x86_64_platform)
         copy_src_platform_files(desktop_arm64_platform)
@@ -261,20 +284,27 @@
         copy_src_platform_files(tvos_simulator_arm64_platform)
         copy_src_platform_files(tvos_device_arm64_platform)
     if generate_watchos:
-        copy_src_platform_files(watchos_simulator_i386_platform)
+        if enable_i386:
+            copy_src_platform_files(watchos_simulator_i386_platform)
         copy_src_platform_files(watchos_simulator_x86_64_platform)
         copy_src_platform_files(watchos_simulator_arm64_platform)
-        copy_src_platform_files(watchos_device_armv7k_platform)
+        if enable_armv7:
+            copy_src_platform_files(watchos_device_armv7k_platform)
         copy_src_platform_files(watchos_device_arm64_32_platform)
 
     platform_headers = collections.defaultdict(set)
 
     if generate_ios:
-        build_target(ios_simulator_i386_platform, platform_headers)
+        if enable_i386:
+            build_target(ios_simulator_i386_platform, platform_headers)
         build_target(ios_simulator_x86_64_platform, platform_headers)
         build_target(ios_simulator_arm64_platform, platform_headers)
-        build_target(ios_device_armv7_platform, platform_headers)
+        if enable_armv7:
+            build_target(ios_device_armv7_platform, platform_headers)
         build_target(ios_device_arm64_platform, platform_headers)
+        if enable_maccatalyst:
+            build_target(macosx_x86_64_platform, platform_headers)
+            build_target(macosx_arm64_platform, platform_headers)
     if generate_osx:
         build_target(desktop_x86_64_platform, platform_headers)
         build_target(desktop_arm64_platform, platform_headers)
@@ -283,10 +313,12 @@
         build_target(tvos_simulator_arm64_platform, platform_headers)
         build_target(tvos_device_arm64_platform, platform_headers)
     if generate_watchos:
-        build_target(watchos_simulator_i386_platform, platform_headers)
+        if enable_i386:
+            build_target(watchos_simulator_i386_platform, platform_headers)
         build_target(watchos_simulator_x86_64_platform, platform_headers)
         build_target(watchos_simulator_arm64_platform, platform_headers)
-        build_target(watchos_device_armv7k_platform, platform_headers)
+        if enable_armv7:
+            build_target(watchos_device_armv7k_platform, platform_headers)
         build_target(watchos_device_arm64_32_platform, platform_headers)
 
     mkdir_p('darwin_common/include')
@@ -302,6 +334,8 @@
     parser.add_argument('--only-osx', action='store_true', default=False)
     parser.add_argument('--only-tvos', action='store_true', default=False)
     parser.add_argument('--only-watchos', action='store_true', default=False)
+    parser.add_argument('--disable-i386', action='store_true', default=False)
+    parser.add_argument('--disable-armv7', action='store_true', default=False)
     args = parser.parse_args()
 
     generate_source_and_headers(
@@ -309,4 +343,6 @@
         generate_ios=not args.only_osx and not args.only_tvos and not args.only_watchos,
         generate_tvos=not args.only_ios and not args.only_osx and not args.only_watchos,
         generate_watchos=not args.only_ios and not args.only_osx and not args.only_tvos,
+        enable_i386=not args.disable_i386,
+        enable_armv7=not args.disable_armv7,
     )
